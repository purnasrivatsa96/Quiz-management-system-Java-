/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author abhiram
 */

import java.awt.*;
import javax.swing.*;
import java.awt.event.*;
import java.io.*;

public class PhysicsModifyQuestion extends java.awt.Frame {

    /**
     * Creates new form InsertPhysicsQuestion
     */
    public PhysicsModifyQuestion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrpQuestionType = new javax.swing.ButtonGroup();
        btnBack = new java.awt.Button();
        lblDisplay = new java.awt.Label();
        lblQuestionNumber = new java.awt.Label();
        txtQuestionNumber = new java.awt.TextField();
        btnMcq = new java.awt.Button();
        btnFillBlank = new java.awt.Button();
        btnTrueFalse = new java.awt.Button();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });


        setLayout(new FlowLayout());
        setSize(1000,1000);

        btnBack.setLabel("Back");
        btnBack.setActionCommand("back");
        add(btnBack);
        btnBack.setBounds(235, 253, 43, 24);
        btnBack.addActionListener(new ButtonClickListener());

        if(Subject.Subject.equals("phy"))
        lblDisplay.setText("Modify Physics Question");

        else{
            lblDisplay.setText("Modify Chemistry Question");
        }
        add(lblDisplay);
        lblDisplay.setBounds(132, 40, 200, 20);

        add(txtQuestionNumber);
        txtQuestionNumber.setBounds(216, 63, 73, 20);
        
        lblQuestionNumber.setText("Question Number");
        add(lblQuestionNumber);
        lblQuestionNumber.setBounds(52, 63, 102, 20);

        btnMcq.setLabel("MCQ");
        btnMcq.setActionCommand("mcq");
        add(btnMcq);
        btnMcq.setBounds(64, 151, 43, 24);
        btnMcq.addActionListener(new ButtonClickListener());

        btnFillBlank.setLabel("Fill in the blank");
        btnFillBlank.setActionCommand("fill");
        add(btnFillBlank);
        btnFillBlank.setBounds(64, 185, 98, 24);
        btnFillBlank.addActionListener(new ButtonClickListener());

        btnTrueFalse.setLabel("True False");
        btnTrueFalse.setActionCommand("true");
        add(btnTrueFalse);
        btnTrueFalse.setBounds(64, 219, 75, 24);
        btnTrueFalse.addActionListener(new ButtonClickListener());

        
        setLayout(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PhysicsInsertQuestion().setVisible(true);
            }
        });
    }


    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btnBack;
    private java.awt.Button btnFillBlank;
    private java.awt.Button btnMcq;
    private java.awt.Button btnTrueFalse;
    private javax.swing.ButtonGroup btngrpQuestionType;
    private java.awt.Label lblDisplay;
    private java.awt.Label lblQuestionNumber;
    private java.awt.TextField txtQuestionNumber;
    String filenameQuest ;
    String filenameAns ;
    // End of variables declaration//GEN-END:variables

    /*if(btnMcq.isSelected()||btnFillBlank.isSelected()){
            btnTrueFalse.setSelected();
        }
        if(btnFillBlank.isSelected()||btnTrueFalse.isSelected()){
            btnMcq.setSelected(false);
        }
        if(btnMcq.isSelected()||btnTrueFalse.isSelected()){
            btnFillBlank.setSelected(false);
        }
      */  

    public class ButtonClickListener implements ActionListener{
        public void actionPerformed(ActionEvent e){
            try{
            	if(Subject.Subject.equals("phy")){
                    filenameQuest = ("PhysicsQuestions.txt");
                    filenameAns = ("PhysicsAnswers.txt");
                }
            if(Subject.Subject.equals("chem")){
                    filenameQuest = ("ChemistryQuestions.txt");
                    filenameAns = ("ChemAnswers.txt");
                }
            FileReader fileReaderQuest = new FileReader(filenameQuest);
                BufferedReader bufferedReaderQuest = new BufferedReader(fileReaderQuest);
                FileReader fileReaderAns = new FileReader(filenameAns);
                BufferedReader bufferedReaderAns = new BufferedReader(fileReaderAns);
                int numberofQuestions = 0;    
                String command = e.getActionCommand();
                String strQuest;
               
            if(command.equals("back")){
                btnBack.getParent().setVisible(false);
                new PhysicsHomePage().setVisible(true);
            }

            else if(command.equals("mcq")){
            	while((strQuest = bufferedReaderQuest.readLine())!=null){
                        numberofQuestions++;
                    }
               int questionNumberToModify = Integer.parseInt(txtQuestionNumber.getText().toString());
               if(questionNumberToModify<=numberofQuestions){
                btnTrueFalse.getParent().setVisible(false);
                String strquestionNumber = txtQuestionNumber.getText().toString();
                int intquestionNumber = Integer.parseInt(strquestionNumber);
                new PhysicsModifyMcqQuest(intquestionNumber).setVisible(true);
                }

               else if(questionNumberToModify>numberofQuestions){
            	lblDisplay.setText("enter valid Question Number");
            } 
            }
            
            else if(command.equals("fill")){
            	while((strQuest = bufferedReaderQuest.readLine())!=null){
                        numberofQuestions++;
                    }
               int questionNumberToModify = Integer.parseInt(txtQuestionNumber.getText().toString());
               if(questionNumberToModify<=numberofQuestions){
                btnTrueFalse.getParent().setVisible(false);
                String strquestionNumber = txtQuestionNumber.getText().toString();
                int intquestionNumber = Integer.parseInt(strquestionNumber);
                new PhysicsModifyFillInTheBlank(intquestionNumber).setVisible(true);
                }

               else if(questionNumberToModify>numberofQuestions){
            	lblDisplay.setText("enter valid Question Number");
            } 
            }
            else if(command.equals("true")){
            	while((strQuest = bufferedReaderQuest.readLine())!=null){
                        numberofQuestions++;
                    }
               int questionNumberToModify = Integer.parseInt(txtQuestionNumber.getText().toString());
               if(questionNumberToModify<=numberofQuestions){
                btnTrueFalse.getParent().setVisible(false);
                String strquestionNumber = txtQuestionNumber.getText().toString();
                int intquestionNumber = Integer.parseInt(strquestionNumber);
                new PhysicsModifyTrueFalseQuest1(intquestionNumber).setVisible(true);
                }

               else if(questionNumberToModify>numberofQuestions){
            	lblDisplay.setText("enter valid Question Number");
            } 
            }
            else if(txtQuestionNumber.getText().toString().equals("")){
                lblDisplay.setText("Enter Question Number");
            }
            
                
                       

        }
        catch(NumberFormatException ex){
                    lblDisplay.setText("please enter a question number");
                    new PhysicsModifyQuestion().setVisible(true);
                 }
        catch(IOException ioe){
                 	System.out.println("IO Exception caught");
                 }

        }
    }
}
