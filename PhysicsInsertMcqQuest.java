/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author abhiram
 */
import java.io.*;
import java.awt.*;
import java.awt.event.*;

public class PhysicsInsertMcqQuest extends java.awt.Frame {

    /**
     * Creates new form InsertPhyMcqQuest
     */
    public PhysicsInsertMcqQuest() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblQuestion = new java.awt.Label();
        lblAnswer = new java.awt.Label();
        lblOptionA = new java.awt.Label();
        lblOptionB = new java.awt.Label();
        lblOptionC = new java.awt.Label();
        lblOptionD = new java.awt.Label();
        lblActionDisplay = new java.awt.Label();
        txtAnswer = new java.awt.TextField();
        txtOptionA = new java.awt.TextField();
        txtOptionB = new java.awt.TextField();
        txtOptionC = new java.awt.TextField();
        txtOptionD = new java.awt.TextField();
        btnInsert = new java.awt.Button();
        btnBack = new java.awt.Button();
        txtQuestion = new java.awt.TextField();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        setLayout(new FlowLayout());
        setSize(1000,1000);

        
        lblQuestion.setText("Question");
        add(lblQuestion);
        lblQuestion.setBounds(30, 80, 54, 20);

        lblAnswer.setText("Answer");
        add(lblAnswer);
        lblAnswer.setBounds(30, 136, 45, 20);

        lblOptionA.setText("Option A");
        add(lblOptionA);
        lblOptionA.setBounds(10, 191, 50, 20);

        lblOptionB.setText("Option B");
        add(lblOptionB);
        lblOptionB.setBounds(88, 191, 51, 20);

        lblOptionC.setText("Option C");
        add(lblOptionC);
        lblOptionC.setBounds(164, 191, 52, 20);

        lblOptionD.setText("Option D");
        add(lblOptionD);
        lblOptionD.setBounds(240, 191, 52, 20);

        add(txtOptionA);
        txtOptionA.setBounds(10, 221, 50, 20);
        add(txtOptionB);
        txtOptionB.setBounds(88, 221, 51, 20);
        add(txtOptionC);
        txtOptionC.setBounds(164, 221, 52, 20);
        add(txtOptionD);
        txtOptionD.setBounds(240, 221, 52, 20);

        add(txtAnswer);
        txtAnswer.setBounds(114, 136, 100, 20);

        lblActionDisplay.setText("Insert Question");
        add(lblActionDisplay);
        lblActionDisplay.setBounds(122, 45, 88, 20);

        btnInsert.setLabel("Insert Question");
        add(btnInsert);
        btnInsert.setBounds(98, 251, 100, 24);
        btnInsert.addActionListener(new ButtonClickListener());

        btnBack.setLabel("Back");
         add(btnBack);
        btnBack.setBounds(319, 136, 43, 24);
        btnBack.addActionListener(new ButtonClickListener());
        btnBack.setActionCommand("back");

        add(txtQuestion);
        txtQuestion.setBounds(114, 80, 237, 20);

        

        setLayout(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
     * @param args the command line arguments
     */

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PhysicsInsertMcqQuest().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btnBack;
    private java.awt.Button btnInsert;
    private java.awt.Label lblActionDisplay;
    private java.awt.Label lblAnswer;
    private java.awt.Label lblOptionA;
    private java.awt.Label lblOptionB;
    private java.awt.Label lblOptionC;
    private java.awt.Label lblOptionD;
    private java.awt.Label lblQuestion;
    private java.awt.TextField txtAnswer;
    private java.awt.TextField txtOptionA;
    private java.awt.TextField txtOptionB;
    private java.awt.TextField txtOptionC;
    private java.awt.TextField txtOptionD;
    private java.awt.TextField txtQuestion;
    

    String filenameQuest = ("PhysicsQuestions.txt");
    String filenameAns = ("PhysicsAnswers.txt");

    // End of variables declaration//GEN-END:variables

    public class ButtonClickListener implements ActionListener{
        public void actionPerformed(ActionEvent e){
            String command = e.getActionCommand();
            if(command.equals("back")){
                btnBack.getParent().setVisible(false);
                new PhysicsInsertQuestion().setVisible(true);
            }
            else{
                if(Subject.Subject.equals("phy")){
                    filenameQuest = ("PhysicsQuestions.txt");
                    filenameAns = ("PhysicsAnswers.txt");
                }
                if(Subject.Subject.equals("chem")){
                    filenameQuest = ("ChemistryQuestions.txt");
                    filenameAns = ("ChemAnswers.txt");
                }
                try{
                    //storing questions in file
                    FileReader fileReaderQuest = new FileReader(filenameQuest);
                    BufferedReader bufferedReaderQuest = new BufferedReader(fileReaderQuest);
                    FileWriter fileWriterQuest = new FileWriter(filenameQuest,true);
                    BufferedWriter bufferedWriterQuest = new BufferedWriter(fileWriterQuest);
                    int questionNumber = 1;
                    String lineQuest;
                    while((lineQuest = bufferedReaderQuest.readLine()) !=null){
                        questionNumber++;
                    }
                    bufferedWriterQuest.write((questionNumber) + "." + txtQuestion.getText().toString()+ " (" + txtOptionA.getText().toString()+ "," + txtOptionB.getText().toString() + "," + txtOptionC.getText().toString()+ "," + txtOptionD.getText().toString() + ")" + " -MCQ ");
                    bufferedWriterQuest.newLine();
                    bufferedWriterQuest.close();

                    //storing answers in file
                    FileReader fileReaderAns = new FileReader(filenameAns);
                    BufferedReader bufferedReaderAns = new BufferedReader(fileReaderAns);
                    FileWriter fileWriterAns = new FileWriter(filenameAns,true);
                    BufferedWriter bufferedWriterAns = new BufferedWriter(fileWriterAns);
                    int answerNumber = 1;
                    String lineAns;
                    while((lineAns = bufferedReaderAns.readLine()) !=null){
                        answerNumber++;
                    }
                    bufferedWriterAns.write((answerNumber) + "." + txtAnswer.getText().toString());
                    bufferedWriterAns.newLine();
                    bufferedWriterAns.close();

                }
                catch(IOException ex){
                    System.out.println("error");
                }
            }

        }
    }
}
